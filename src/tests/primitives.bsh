#!/bin/java bsh.Interpreter

source("TestHarness.bsh");


// basic
byte b = (byte)2;
byte b = 0xff;
byte b = 2;
i=b;
assert( i == 2 );
char c = 'A';
char c = 5;
short s = (short)2;
short s = 2;
int i = 2;
float f = 3.0f;
// float's don't get auto cast in declarations
assert( isEvalError("float f = 3.0"));
double d = 3.0;

// promote
double d1 = 3.0f;
assert( d1.getType() == Double.TYPE );
long l1 = 5;
assert( l1.getType() == Long.TYPE );
l1 = (byte)5;
assert( l1.getType() == Long.TYPE );

// basic assignment promotion
int i2 = (byte)5;
long l1 = 5;
assert(l1==5);
long l2 = b;
assert(l2==2);

long l3=(byte)2;

/*
	Unification of wrapper types with primitives
	Note: 	This stuff was added by Sean.
	I'm still considering it experimental. 
*/
Integer iw = 2;
Double dw = 2.0;
assert( iw == i );
assert( dw == b );

// preserve identity semantics
// .equal wrappers don't test ==
assert( !(iw == dw) );

assert( iw instanceof Integer );
assert( iw != null );
Integer in = null;
assert( in == null );

complete();

